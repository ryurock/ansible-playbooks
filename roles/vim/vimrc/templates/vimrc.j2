""""""""""""""""""""""""""""""
" NeoBundle
""""""""""""""""""""""""""""""
" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

if has('vim_starting')
  if &compatible
    set nocompatible               " Be iMproved
  endif

  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif
" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'
""""""""""""""""""""""""""""""
" My NeoBundle
""""""""""""""""""""""""""""""
" vimで非同期処理プラグイン。see http://kaworu.jpn.org/vim/vimproc
NeoBundle 'Shougo/vimproc.vim', {
\ 'build' : {
\     'windows' : 'tools\\update-dll-mingw',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make',
\     'linux' : 'make',
\     'unix' : 'gmake',
\    },
\ }
" Unite
NeoBundle 'Shougo/unite.vim'

" vimでshell実行
NeoBundle 'Shougo/vimshell'

" alfred的なファイル検索
NeoBundle 'Shougo/neomru.vim'
" ソースのアウトライン表示
NeoBundle 'Shougo/unite-outline'

" VimFiler
NeoBundle 'Shougo/vimfiler'

" ステータスラインの強化
NeoBundle 'bling/vim-airline'

" uniteでカラースキーマ :Unite -auto-preview colorscheme でプレビューできる
NeoBundle 'ujihisa/unite-colorscheme'

" Vimの入力補完
" see http://qiita.com/hide/items/229ff9460e75426a2d07
NeoBundle 'Shougo/neocomplcache'

" neocomplcacheの設定 ----- Start -----

" Disable AutoComplPop.
let g:acp_enableAtStartup = 0
" Use neocomplcache.
let g:neocomplcache_enable_at_startup = 1
" Use smartcase.
let g:neocomplcache_enable_smart_case = 1
" Set minimum syntax keyword length.
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'

" neocomplcacheの設定 ----- End -----

"  scroll に加速機能をつける
NeoBundle 'yonchu/accelerated-smooth-scroll'


""""""""""""""""""""""""""""""
" My NeoBundle End
""""""""""""""""""""""""""""""
call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

""""""""""""""""""""""""""""""
" NeoBundle End
""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""
" 標準的な設定
""""""""""""""""""""""""""""""


" INSERT時にバックスペースをバックスペースとして動作させる。see http://qiita.com/omega999/items/23aec6a7f6d6735d033f
set backspace=2

" vimに行番号を表示させる
set number

" スワップファイル作らない
set noswapfile

" バックアップ取らない
set nobackup

" スクロール時の余白確保 see http://d.hatena.ne.jp/hyuki/20131206/vim
set scrolloff=3

" 一行に長い文章を書いていても自動折り返しをしない
set textwidth=0

" ビープをならさない
set vb t_vb=

" QuickFixListのプレビューを利用できるにする
set modifiable

" color-scheme
set background=dark
colorscheme hybrid

""""""""""""""""""""""""""""""
" タブ・空白特殊文字表示・見え方など
""""""""""""""""""""""""""""""

" タブ文字を CTRL-I で表示し、行末に $ で表示する。（有効:list/無効:nolist）
set list

" タブ文字などの表示の見え方の設定
set lcs=tab:>.,trail:_,extends:\

" SpecialKey see http://rcmdnk.github.io/blog/2014/07/22/computer-vim/#specialkey
highlight SpecialKey cterm=NONE ctermfg=7 guifg=7

" 全角スペースを表示
" see http://inari.hatenablog.com/entry/2014/05/05/231307
function! ZenkakuSpace()
    highlight ZenkakuSpace cterm=reverse ctermfg=DarkMagenta gui=reverse guifg=DarkMagenta
endfunction
if has('syntax')
    augroup ZenkakuSpace
        autocmd!
        autocmd ColorScheme       * call ZenkakuSpace()
        autocmd VimEnter,WinEnter * match ZenkakuSpace /　/
    augroup END
    call ZenkakuSpace()
endif

" タブ空白変換
set expandtab


""""""""""""""""""""""""""""""
" バッファの設定
""""""""""""""""""""""""""""""
" 外部で変更のあったファイルを自動的に読み直す
" see http://vim-jp.org/vim-users-jp/2011/03/12/Hack-206.html
set autoread
" ファイルの自動読み直しの設定でInsertモードに切り替わった時とウィンドウが移動した時にファイルを読み直すようにする
if has("autocmd")
  augroup vimrc-checktime
    autocmd!
    autocmd InsertEnter,WinEnter * checktime
  augroup END
endif " has("autocmd")


""""""""""""""""""""""""""""""
" Exploreの設定
""""""""""""""""""""""""""""""
" netrwは常にtree view
let g:netrw_liststyle = 3

"画面最後の行をできる限り表示する。
set display+=lastline


""""""""""""""""""""""""""""""
"ステータスライン
""""""""""""""""""""""""""""""
" ステータスラインを常に表示
set laststatus=2
" ステータスラインに文字コードと改行文字を表示する
set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%l,%c%V%8P
" vim-airlineでタブもairline風に表示させる
let g:airline#extensions#tabline#enabled = 1


""""""""""""""""""""""""""""""
"カーソル
""""""""""""""""""""""""""""""
" カーソル行をハイライト
set cursorline
hi clear CursorLine
highlight CursorLine cterm=underline ctermfg=lightgray guibg=darkgray

"カーソルが何行目の何列目に置かれているかを表示する
set ruler

" カーソルを行頭、行末で止まらないようにする
set whichwrap=b,s,h,l,<,>,[,]

""""""""""""""""""""""""""""""
"入力補完
""""""""""""""""""""""""""""""
" :でタブを押すと候補が横に表示される
set wildmenu

" コマンド補完を開始するキー
set wildchar=<tab>

" リスト表示，最長マッチ
set wildmode=list:full

" コマンド・検索パターンの履歴数
set history=1000


""""""""""""""""""""""""""""""
"キーマップ
""""""""""""""""""""""""""""""
"prefix keyの設定
nmap <Space> [unite]
"スペースキーとfキーでバッファと最近開いたファイル一覧を表示
nnoremap <silent> [unite]b :<C-u>Unite<Space>buffer file_mru<CR>
"スペースキーとeキーでVimfilerの起動
nnoremap <silent> [unite]f :<C-u>VimFiler<CR>


""""""""""""""""""""""""""""""
" インデント Indent
""""""""""""""""""""""""""""""
set autoindent   " 自動でインデント
set paste        " ペースト時にautoindentを無効に(onにするとautocomplpop.vimが動かない)
set smartindent  " 新しい行を開始したときに、新しい行のインデントを現在行と同じ量にする。

" softtabstopはTabキー押し下げ時の挿入される空白の量，0の場合はtabstopと同じ，BSにも影響する
set tabstop=2 shiftwidth=2 softtabstop=0

if has("autocmd")
  "ファイルタイプの検索を有効にする
  filetype plugin on
  "そのファイルタイプにあわせたインデントを利用する
  filetype indent on
  " これらのftではインデントを無効に
  "autocmd FileType php filetype indent off

  autocmd FileType apache     setlocal sw=4 sts=4 ts=4 et
  autocmd FileType aspvbs     setlocal sw=4 sts=4 ts=4 et
  autocmd FileType c          setlocal sw=4 sts=4 ts=4 et
  autocmd FileType cpp        setlocal sw=4 sts=4 ts=4 et
  autocmd FileType cs         setlocal sw=4 sts=4 ts=4 et
  autocmd FileType css        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType diff       setlocal sw=4 sts=4 ts=4 et
  autocmd FileType eruby      setlocal sw=4 sts=4 ts=4 et
  autocmd FileType html       setlocal sw=2 sts=2 ts=2 et
  autocmd FileType java       setlocal sw=4 sts=4 ts=4 et
  autocmd FileType javascript setlocal sw=2 sts=2 ts=2 et
  autocmd FileType perl       setlocal sw=4 sts=4 ts=4 et
  autocmd FileType php        setlocal sw=4 sts=4 ts=4 et
  autocmd FileType python     setlocal sw=4 sts=4 ts=4 et
  autocmd FileType ruby       setlocal sw=2 sts=2 ts=2 et
  autocmd FileType haml       setlocal sw=2 sts=2 ts=2 et
  autocmd FileType sh         setlocal sw=4 sts=4 ts=4 et
  autocmd FileType sql        setlocal sw=4 sts=4 ts=4 et
  autocmd FileType vb         setlocal sw=4 sts=4 ts=4 et
  autocmd FileType vim        setlocal sw=2 sts=2 ts=2 et
  autocmd FileType wsh        setlocal sw=4 sts=4 ts=4 et
  autocmd FileType xhtml      setlocal sw=4 sts=4 ts=4 et
  autocmd FileType xml        setlocal sw=4 sts=4 ts=4 et
  autocmd FileType yaml       setlocal sw=2 sts=2 ts=2 et
  autocmd FileType zsh        setlocal sw=4 sts=4 ts=4 et
  autocmd FileType scala      setlocal sw=2 sts=2 ts=2 et
endif

